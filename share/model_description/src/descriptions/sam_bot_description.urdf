<?xml version="1.0"?>

<robot name="robot_trx" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Global namespace -->
  <xacro:arg name="robot_name" default="car_1" />
  <xacro:arg name="robot_skin" default="Blue" />
  <xacro:property name="base_width" value="0.25"/>
  <xacro:property name="base_length" value="0.65"/>
  <xacro:property name="base_height" value="0.18"/>

  <xacro:property name="wheel_radius" value="0.12"/>
  <xacro:property name="wheel_width" value="0.06"/>
  <xacro:property name="wheel_ygap" value="0.025"/>
  <xacro:property name="wheel_zoff" value="0.06"/>
  <xacro:property name="wheel_xoff" value="0.11"/>
  <xacro:property name="middle_xoff" value="0.22"/>

  <!-- inertial parameter macros -->

  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>
  <!-- steering hinge inertias -->
  <xacro:macro name="steering_hinge_inertial_params">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <mass value="0.100" />
    <inertia ixx="4E-06" ixy="0"           ixz="0"
                              iyy="4E-06"  iyz="0"
                                                izz="4E-06" />
  </xacro:macro>

  <!-- transmission macros -->

  <xacro:macro name="wheel_transmission" params="name">
    <transmission name="${name}_transmission" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="steering_hinge_transmission" params="name">
    <transmission name="${name}_transmission" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>


  <link name="$(arg robot_name)_base_footprint"/>
  <link name="$(arg robot_name)_base_link">
        <collision>
            <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>  
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
              
        </collision>
        <!-- m is mass of the car -->
            <xacro:box_inertia m="5" w="${base_width}" d="${base_length}" h="${base_height}"/>
        <visual>
            <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>
            <material name="Cyan">
    <color rgba="0 1.0 1.0 1.0"/>
      </material>
            <geometry>
               <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </visual>
    </link>

	<xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
    <collision>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    
    </collision>
    <!-- m is mass of a wheel -->
    <xacro:cylinder_inertia m="0.1" r="${wheel_radius}" h="${wheel_width}"/>
      <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    <material name="Gray">
      <color rgba="0.5 0.5 0.5 1.0"/>
    </material>
      </visual>
    </link>


    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_length/2 + wheel_width/2)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>
  
  <xacro:macro name="middle_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
    <collision>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    
    </collision>
    <!-- m is mass of a wheel -->
    <xacro:cylinder_inertia m="0.1" r="${wheel_radius}" h="${wheel_width}"/>
      <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    <material name="Gray">
      <color rgba="0.5 0.5 0.5 1.0"/>
    </material>
      </visual>
    </link>


    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*middle_xoff} ${y_reflect*(base_length/2 + wheel_width/2)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>
  <!-- Add the left rear wheel with its joints and tranmissions -->
	<xacro:wheel prefix="drivewhl_rl" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_rr" x_reflect="-1" y_reflect="-1" />
<xacro:wheel prefix="drivewhl_fl" x_reflect="1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_fr" x_reflect="1" y_reflect="-1" />
<xacro:middle_wheel prefix="drivewhl_ml" x_reflect="-1" y_reflect="1" />
  <xacro:middle_wheel prefix="drivewhl_mr" x_reflect="-1" y_reflect="-1" />

  

  <xacro:wheel_transmission name="drivewhl_rl" />
  <xacro:wheel_transmission name="drivewhl_rr" />
  <xacro:wheel_transmission name="drivewhl_fl" />
  <xacro:wheel_transmission name="drivewhl_fr" />
  <xacro:wheel_transmission name="drivewhl_ml" />
  <xacro:wheel_transmission name="drivewhl_mr" />


  <!-- Add the left steering hinge with its joints and tranmissions -->

  <link name="$(arg robot_name)_left_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
  </link>

  <joint name="$(arg robot_name)_left_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 0.1 0" rpy="0 ${pi/2} 0" />
    <parent link="$(arg robot_name)_base_link" />
    <child link="$(arg robot_name)_left_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-${pi/4}" upper="${pi/4}" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="$(arg robot_name)_left_steering_hinge" />

  <!-- Add the right steering hinge with its joints and tranmissions -->

  <link name="$(arg robot_name)_right_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
  </link>

  <joint name="$(arg robot_name)_right_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 -0.1 0" rpy="0 ${pi/2} 0" />
    <parent link="$(arg robot_name)_base_link" />
    <child link="$(arg robot_name)_right_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-${pi/4}" upper="${pi/4}" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="$(arg robot_name)_right_steering_hinge" />






</robot>
