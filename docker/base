#!/bin/bash

XSOCK=/tmp/.X11-unix
XAUTH=/tmp/.docker.xauth
lockfile=/tmp/dockerd/.session_lock
srcfile=_ROS2_SHARE_
imgname=_ROS2_IMAGE_
tmpfile=$lockfile.tmp
#ros:foxy-ros-base

_usage() {
	echo "Usage: $0"
}

_stop_session() {
	if [ -f "$lockfile" ]; then
		docker stop $(cat $lockfile)
		rm -f $lockfile
		xhost -local:root
	fi
}

_start_session() {
	mkdir -p $(dirname $lockfile)
	
	if [ ! -f "$XAUTH" ]; then 
		touch $XAUTH
		xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
	fi
	
	if [ ! -f "$lockfile" ]; then
		xhost +local:root
		docker run -dit --rm \
			--network host \
			--privileged \
			--env XAUTHORITH=${XAUTH} \
			--env DISPLAY=$DISPLAY \
			--env QT_GRAPHICSYSTEM=native \
			--env QT_X11_NO_MITSHM=1 \
			--volume $XSOCK:$XSOCK:rw \
			--volume $XAUTH:$XAUTH:rw \
			--volume $srcfile:/root/host_ws/src:rw \
			$imgname > $lockfile
	fi
}

if [ $# -eq 1 ] && [ "$1" = 'stop' ]; then
	_stop_session
	echo stopped...

elif [ $# -eq 1 ] && [ "$1" = 'restart' ]; then
	_stop_session
	_start_session
	echo restarted..
else
	if [ ! -f $lockfile ]; then
		_start_session
		echo created...
	fi

	if [ $# == 0 ]; then
		docker exec -it $(cat $lockfile) /ros_entrypoint.sh bash 
	elif [[ $# != 1 ]] || [[ $1 != 'start' ]]; then
		docker exec -it $(cat $lockfile) /ros_entrypoint.sh ros2 $@
	fi
fi


unset XSOCK XAUTH lockfile srcfile imgname
unset _usage _start_session _stop_session

